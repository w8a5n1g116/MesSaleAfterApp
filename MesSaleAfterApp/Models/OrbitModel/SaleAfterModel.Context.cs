//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MesSaleAfterApp.Models.OrbitModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrbitMOMEntity : DbContext
    {
        public OrbitMOMEntity()
            : base("name=OrbitMOMEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SysUser> SysUser { get; set; }
        public virtual DbSet<WXSaleAfterAssessment> WXSaleAfterAssessment { get; set; }
        public virtual DbSet<WXSaleAfterMain> WXSaleAfterMain { get; set; }
        public virtual DbSet<WXSaleAfterWorkNote> WXSaleAfterWorkNote { get; set; }
        public virtual DbSet<WXUSerBind> WXUSerBind { get; set; }
        public virtual DbSet<AfterWorkSchedule> AfterWorkSchedule { get; set; }
        public virtual DbSet<Ter_Customer_Com_Records> Ter_Customer_Com_Records { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Lot> Lot { get; set; }
        public virtual DbSet<MO> MO { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductRoot> ProductRoot { get; set; }
        public virtual DbSet<SO> SO { get; set; }
        public virtual DbSet<FtpFile> FtpFile { get; set; }
        public virtual DbSet<Q_issue_Rec_ForCustomer> Q_issue_Rec_ForCustomer { get; set; }
    
        public virtual int SysGetObjectPKId(string objectId, string objectName, ObjectParameter pKID)
        {
            var objectIdParameter = objectId != null ?
                new ObjectParameter("ObjectId", objectId) :
                new ObjectParameter("ObjectId", typeof(string));
    
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SysGetObjectPKId", objectIdParameter, objectNameParameter, pKID);
        }
    }
}
